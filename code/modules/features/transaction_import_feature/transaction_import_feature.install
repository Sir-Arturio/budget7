<?php

/**
 * Fix broken OP transaction GUIDs.
 */
function transaction_import_feature_update_7101(&$sandbox) {
  // Load all transactions.
  $query = new EntityFieldQuery();
  $results = $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'transaction')
    ->execute();
  if (!isset($results['node'])) {
    return;
  }
  // Load transactions as full nodes.
  $nodes = node_load_multiple(array_keys($results['node']));

  // Load feed item GUIDs for transactions.
  $result = db_select('feeds_item', 'i')
    ->fields('i', array('entity_id', 'guid'))
    ->condition('entity_type', 'node')
    ->condition('id', 'transaction')
    ->execute();
  $feed_items = $result->fetchAllKeyed();

  // Loop through all transactions.
  $fixed = 0;
  $messages = '';
  foreach ($nodes as $node) {
    $guid = $feed_items[$node->nid];
    $transaction_id_date = transaction_import_feature_get_date_from_transaction_id($guid);
    $entry_date = new DateTime($node->field_entry_date['und'][0]['value']);

    // Fix GUID date if it does not match to entry date.
    if ($transaction_id_date != $entry_date) {
      $fixed++;
      $messages .= $guid . " -> ";
      $guid = explode('/', $guid);
      $guid[0] = $entry_date->format("Ymd");
      $guid = implode('/', $guid);
      $messages .= $guid ."\n";
      db_update('feeds_item')
        ->fields(array('guid' => $guid))
        ->condition('entity_type', 'node')
        ->condition('id', 'transaction')
        ->condition('entity_id', $node->nid)
        ->execute();
    }
  }
  return "Fixed " . $fixed . " transactions.\n" . $messages;
}
